spring.security.oauth2.resourceserver.jwt.issuer-uri=${OAUTH2_ISSUER_URI}

# Server port
server.port=${ORDER_SERVICE_PORT:8083}

# Spring Boot Actuator
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.health.show-details=always

# Database Configuration (MySQL example, adjust for your DB)
spring.datasource.url=${ORDER_SERVICE_DB_URL}
spring.datasource.username=${ORDER_SERVICE_DB_USERNAME}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Flyway Configuration
# spring.flyway.enabled=true
# spring.flyway.locations=classpath:db/migration

# Jackson JSON Properties
spring.jackson.default-property-inclusion=NON_NULL
spring.jackson.serialization.write-dates-as-timestamps=false

# Spring Kafka Configuration
spring.kafka.bootstrap-servers=${KAFKA_BROKER_URL}
spring.kafka.consumer.group-id=order-management-group
# spring.kafka.consumer.auto-offset-reset=earliest # Or latest
# Producer settings (can be configured here or in KafkaConfig.java)
# spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
# spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Consumer settings for JSON Deserialization (can be configured here or in KafkaConfig.java)
# spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
# spring.kafka.consumer.properties.spring.json.trusted.packages=com.ecommerce.orderservice.events.model
# spring.kafka.consumer.properties.spring.json.value.default.type=com.ecommerce.orderservice.events.model.PaymentConfirmedEventPayload # Example, set per listener if different

# Application specific Kafka topics (provide defaults, can be overridden by environment variables)
app.kafka.topics.order-events=order.events
app.kafka.topics.payment-confirmed=payment.confirmed
app.kafka.topics.payment-failed=payment.failed

# External Service URLs (provide defaults, can be overridden by environment variables)
external.services.product-catalog-service.base-url=${PRODUCT_CATALOG_SERVICE_BASE_URL}
external.services.cart-service.base-url=${CART_SERVICE_BASE_URL}

# Springdoc OpenAPI configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.version=v1.0.0
